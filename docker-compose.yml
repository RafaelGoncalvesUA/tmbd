version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181 
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "kafka:9092"]
      interval: 5s
      timeout: 5s
      retries: 10

  producer:
    build:
      context: ./produce
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - kafka

  consumer:
    build:
      context: .
      dockerfile: ./process/Dockerfile
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - kafka
      - producer
    volumes:
      - model_volume:/shared_volume

  # Flask REST API
  serve:
    build:
      context: .
      dockerfile: ./serve/Dockerfile
    environment:
      - PYTHONUNBUFFERED=1
      - FLASK_HOST=127.0.0.1
    ports:
      - "5000:5000"
    depends_on:
      - consumer
    volumes:
      - model_volume:/shared_volume

volumes:
  model_volume:
